{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Profile/Profile.js","components/Statistics/StatisticItem.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/Transation/Transation.js","components/Transation/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","src","alt","width","followers","views","likes","prototype","PropTypes","string","isRequired","number","StatisticItem","label","percentage","style","text","Statistics","statistics","title","statList","map","id","item","arrayOf","shape","FriendListItem","isOnline","class","bool","FriendList","friends","Transation","type","amount","currency","TransactionHistory","items","transactions","App","user","statisticalData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.542af8fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3LtOY\",\"title\":\"Statistics_title__2aWYv\",\"statList\":\"Statistics_statList__2ytcQ\",\"item\":\"Statistics_item__1Liy8\",\"text\":\"Statistics_text__nC9Fu\",\"label\":\"Statistics_label__3zA_3\",\"percentage\":\"Statistics_percentage__1eK_4\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Profile.css';\n\nconst Profile = ({ avatar, name, tag, location, stats }) => (\n  <div className=\"Profile\">\n    <div className=\"Description\">\n      <img\n        src={avatar}\n        alt=\"Аватар пользователя\"\n        className=\"Avatar\"\n        width=\"200\"\n      />\n      <p className=\"Name\">{name}</p>\n      <p className=\"Tag\">@{tag}</p>\n      <p className=\"Location\">{location}</p>\n    </div>\n\n    <ul className=\"Stats\">\n      <li>\n        <span className=\"Label\">Followers</span>\n        <span className=\"Quantity\">{stats.followers}</span>\n      </li>\n      <li>\n        <span className=\"Label\">Views</span>\n        <span className=\"Quantity\">{stats.views}</span>\n      </li>\n      <li>\n        <span className=\"Label\">Likes</span>\n        <span className=\"Quantity\">{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.prototype = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.number.isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Statistics.module.css';\n\nconst StatisticItem = ({ label, percentage }) => (\n  <div className={style.text}>\n    <span className={style.label}>{label}</span>\n    <span className={style.percentage}>{percentage}%</span>\n  </div>\n);\n\nStatisticItem.prototype = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default StatisticItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatisticItem from './StatisticItem';\nimport style from './Statistics.module.css';\nconst Statistics = ({ stats }) => (\n  <section className={style.statistics}>\n    <h2 className={style.title}>Upload stats</h2>\n\n    <ul className={style.statList}>\n      {stats.map(({ id, label, percentage }) => (\n        <li className={style.item} key={id}>\n          <StatisticItem label={label} percentage={percentage} />\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.prototype = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => (\r\n  <div>\r\n    <span class=\"status\">{isOnline}</span>\r\n    <img class=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n    <p class=\"name\">{name}</p>\r\n  </div>\r\n);\r\n\r\nFriendListItem.prototype = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul class=\"friend-list\">\r\n    {friends.map(({ id, avatar, name, isOnline }) => (\r\n      <li class=\"item\" key={id}>\r\n        <FriendListItem avatar={avatar} name={name} isOnline={isOnline} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.prototype = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Transation = ({ type, amount, currency }) => (\r\n  <div>\r\n    <td>{type}</td>\r\n    <td>{amount}</td>\r\n    <td>{currency}</td>\r\n  </div>\r\n);\r\n\r\nTransation.prototype = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.number.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Transation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Transation from './Transation';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table class=\"transaction-history\">\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(({ id, type, amount, currency }) => (\r\n        <tr key={id}>\r\n          <Transation type={type} amount={amount} currency={currency} />\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.prototype = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from './components/Profile/Profile';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport FriendList from './components/FriendList/FriendList';\r\nimport TransactionHistory from './components/Transation/TransactionHistory';\r\nimport user from './user.json';\r\nimport statisticalData from './statistical-data.json';\r\nimport friends from './friends.json';\r\nimport transactions from './transactions.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <h1>Homework 1</h1>\r\n\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n\r\n      <Statistics stats={statisticalData} />\r\n\r\n      <FriendList friends={friends} />\r\n\r\n      <TransactionHistory items={transactions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './style.css';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n"],"sourceRoot":""}